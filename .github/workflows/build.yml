name: build

on:
  push:
    branches:
      - 'develop'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      ECR_REGISTRY: 236744963769.dkr.ecr.ap-northeast-2.amazonaws.com
      IMAGE_NAME: invitation-api
      AWS_REGION: ap-northeast-2

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      - name: Execute Gradle build
        run: ./gradlew build

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, Tag, and Push Image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY }}
          IMAGE_NAME: ${{ env.IMAGE_NAME }}
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          # Build the Docker image
          docker build -t $ECR_REGISTRY/$IMAGE_NAME .

          # Tag the Docker image
          docker tag $ECR_REGISTRY/$IMAGE_NAME:latest $ECR_REGISTRY/$IMAGE_NAME:${{ github.sha }}

          # Push the Docker image to Amazon ECR
          docker push -a $ECR_REGISTRY/$IMAGE_NAME
      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: ${{ secrets.SSH_SCRIPT }}
